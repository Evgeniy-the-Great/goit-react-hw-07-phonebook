{"version":3,"sources":["Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","redux/contacts/contactsActions.js","Components/contactForm/ContactForm .js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","Components/contactForm/ContactForm.module.css"],"names":["module","exports","filterContact","createAction","deleteContact","getContacts","addContact","contact","payload","id","uuidv4","initialState","name","number","mapDispatchToProps","connect","state","contactList","contacts","items","useState","form","setForm","onHandleChange","e","target","value","prev","reset","onSubmit","preventDefault","some","toLowerCase","alert","className","styles","label","placeholder","type","pattern","title","required","onChange","contactName","contactFilter","filter","onDeleteBtnClick","style","console","log","includes","map","contactItem","contactText","onClick","filterLabel","filterInput","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","box","itemsReducer","createReducer","_","filterReducer","contactsReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a5c47f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__13H6R\",\"contactItem\":\"ContactList_contactItem__FQwdK\",\"contactText\":\"ContactList_contactText__3tbqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__Ltx_h\",\"filterLabel\":\"Filter_filterLabel__3XnbD\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// import { ADD, GET, DELETE, FILTER } from \"../contacts/contactsType\";\r\n\r\n// export const addContact = (contact) => ({\r\n//   type: ADD,\r\n//   payload: { id: uuidv4(), ...contact },\r\n// });\r\n\r\n// export const getContacts = (contacts) => ({\r\n//   type: GET,\r\n//   payload: contacts,\r\n// });\r\n\r\n// export const deleteContact = (id) => ({\r\n//   type: DELETE,\r\n//   payload: id,\r\n// });\r\n\r\n// export const filterContact = (value) => ({\r\n//   type: FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n// ! Toolkit\r\n\r\nexport const filterContact = createAction(\"contactsActions/filterContact\");\r\nexport const deleteContact = createAction(\"contactsActions/deleteContact\");\r\nexport const getContacts = createAction(\"contactsActions/getContacts\");\r\nexport const addContact = createAction(\r\n  \"contactsActions/addContact\",\r\n  (contact) => ({\r\n    payload: {\r\n      id: uuidv4(),\r\n      ...contact,\r\n    },\r\n  })\r\n);\r\n\r\n// export default { filterContact, deleteContact, getContacts, addContact };\r\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contactsActions\";\nimport styles from \"./ContactForm.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ addContact, contactList }) => {\n  const [form, setForm] = useState(initialState);\n\n  const onHandleChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const isThereThisContact = (name) =>\n    contactList.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    if (isThereThisContact(form.name)) {\n      alert(`${form.name} is already in contacts`);\n      return;\n    }\n\n    addContact(form);\n\n    reset();\n  };\n\n  const reset = () => setForm({ name: \"\", number: \"\" });\n\n  return (\n    <form onSubmit={onHandleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          placeholder=\"Jacob Mercer\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={form.name}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          placeholder=\"+38(093)223-77-88\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={form.number}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contactList: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  addContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/contactsActions\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ContactList.module.css\";\n\nconst ContactList = ({ contactList, contactFilter, deleteContact }) => {\n  const onDeleteBtnClick = (e) => {\n    const id = e.target.id;\n    deleteContact(id);\n  };\n\n  const findContact = () =>\n    contactList.filter((contact) => {\n      console.log(contact.name);\n      console.log(contactFilter);\n      return contact.name.toLowerCase().includes(contactFilter.toLowerCase());\n    });\n\n  return (\n    <ul className={style.contactList}>\n      {findContact().map((contact) => (\n        <li key={contact.id} className={style.contactItem}>\n          <p className={style.contactText}>\n            {contact.name}: {contact.number}\n          </p>\n          <button type=\"button\" id={contact.id} onClick={onDeleteBtnClick}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contactList: state.contacts.items,\n  contactFilter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  deleteContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterContact } from \"../../redux/contacts/contactsActions\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({ filterContact }) => {\n  const addToFilterState = (e) => {\n    const filter = e.target.value;\n    filterContact(filter);\n  };\n  return (\n    <label className={style.filterLabel}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={addToFilterState}\n        className={style.filterInput}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  addToFilterState: PropTypes.func,\n};\n\nconst mapDispatchToProps = {\n  filterContact,\n};\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/contactsActions\";\nimport ContactForm from \"../contactForm/ContactForm \";\nimport ContactList from \"../contactList/ContactList\";\nimport Filter from \"../filter/Filter\";\nimport styles from \"./App.module.css\";\n\nconst App = ({ contactList, getContacts }) => {\n  useEffect(() => {\n    getContacts && getContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n  }, [getContacts]);\n\n  useEffect(() => {\n    contactList &&\n      localStorage.setItem(\"contacts\", JSON.stringify(contactList));\n  }, [contactList]);\n\n  return (\n    <>\n      <div className={styles.box}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contactList: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  getContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// import { combineReducers } from \"redux\";\r\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\n// import actions from \"./contactsActions\";\r\nimport {\r\n  filterContact,\r\n  deleteContact,\r\n  getContacts,\r\n  addContact,\r\n} from \"./contactsActions\";\r\n\r\n// import actions from \"./contactsActions\";\r\n\r\n// import { ADD, GET, DELETE, FILTER } from \"../contacts/contactsType\";\r\n// const itemsReducer = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD:\r\n//       return [...state, payload];\r\n\r\n//     case GET:\r\n//       return payload;\r\n\r\n//     case DELETE:\r\n//       return state.filter((contact) => contact.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filterReducer = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// ! Toolkit\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [getContacts]: (_, { payload }) => payload,\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","// import { combineReducers, createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { contactsReducer } from \"./contacts/contactsReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// export const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//! Toolkit\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3O0z4\",\"contactName\":\"ContactForm_contactName__2Cl6V\",\"label\":\"ContactForm_label__137Vb\"};"],"sourceRoot":""}
{"version":3,"sources":["Components/contactForm/ContactForm.module.css","Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsSelectors.js","Components/contactForm/ContactForm .js","redux/contacts/contactsOperation.js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","filterContact","createAction","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactsRequest","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","resetError","errorSelector","state","contacts","error","loaderSelector","loader","contactListSelector","items","contactFilterSelector","filter","filteredContactsSelector","createSelector","contact","name","toLowerCase","includes","initialState","number","ContactForm","useState","form","setForm","contactList","useSelector","dispatch","useDispatch","onHandleChange","e","target","value","prev","reset","onSubmit","preventDefault","some","alert","a","axios","post","response","id","data","message","className","styles","label","placeholder","type","pattern","title","required","onChange","contactName","ContactList","filteredContacts","onDeleteBtnClick","delete","deleteContactOperation","style","map","contactItem","contactText","onClick","Filter","filterLabel","filterInput","App","useEffect","get","Object","keys","key","box","itemsReducer","createReducer","payload","_","filterReducer","loaderReducer","errorReducer","action","contactsReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,YAAc,iCAAiC,MAAQ,6B,mBCA1GD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,YAAc,mC,mBCA9HD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,iLCC7DC,EAAgBC,YAAa,iCAE7BC,EAAuBD,YAClC,wCAGWE,EAAuBF,YAClC,wCAEWG,EAAqBH,YAChC,sCAKWI,EAAqBJ,YAChC,sCAEWK,EAAqBL,YAChC,sCAEWM,EAAmBN,YAC9B,oCAKWO,EAAoBP,YAC/B,qCAEWQ,EAAoBR,YAC/B,qCAEWS,EAAkBT,YAAa,mCAU/BU,EAAaV,YAAa,8B,OC3C1BW,EAAgB,SAACC,GAAD,OAAWA,EAAMC,SAASC,OAC1CC,EAAiB,SAACH,GAAD,OAAWA,EAAMC,SAASG,QAC3CC,EAAsB,SAACL,GAAD,OAAWA,EAAMC,SAASK,OAChDC,EAAwB,SAACP,GAAD,OAAWA,EAAMC,SAASO,QAElDC,EAA2BC,YACtC,CAACL,EAAqBE,IACtB,SAACN,EAAUO,GAAX,OACEP,EAASO,QAAO,SAACG,GAAD,OACdA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,qB,uCCH3CE,EAAe,CACnBH,KAAM,GACNI,OAAQ,IAuEKC,EApEK,WAClB,MAAwBC,mBAASH,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACMC,EAAcC,YAAYjB,GAC1BH,EAAQoB,aAAY,SAACtB,GAAD,OAAWA,EAAMC,SAASC,SAC9CqB,EAAWC,cAEXC,EAAiB,SAACC,GACtB,MAAwBA,EAAEC,OAAlBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACd1B,GAASqB,EAASzB,KAClBsB,GAAQ,SAACS,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBjB,EAAOgB,QAoBlCE,EAAQ,kBAAMV,EAAQ,CAAER,KAAM,GAAII,OAAQ,MAEhD,OACE,uBAAMe,SAfe,SAACL,GALG,IAACd,ECTDX,GDezByB,EAAEM,iBANwBpB,EAOHO,EAAKP,KAN5BS,EAAYY,MACV,SAACtB,GAAD,OAAaA,EAAQC,KAAKC,gBAAkBD,EAAKC,kBAMjDqB,MAAM,GAAD,OAAIf,EAAKP,KAAT,6BAIPW,GCrByBtB,EDqBIkB,ECrBL,uCAAc,WAAOI,GAAP,eAAAY,EAAA,6DACxCZ,EAAS5B,KAD+B,kBAGfyC,IAAMC,KAAN,oEAErBpC,GALoC,OAGhCqC,EAHgC,OAOtCf,EAAS3B,EAAkB,2BAAKK,GAAN,IAAgBsC,GAAID,EAASE,KAAK5B,SAPtB,gDAStCW,EAAS1B,EAAgB,KAAM4C,UATO,yDAAd,wDDuBxBX,MAMgCY,UAAWC,IAAOxB,KAAlD,UACE,wBAAOuB,UAAWC,IAAOC,MAAzB,iBAEE,uBACEC,YAAY,eACZC,KAAK,OACLlC,KAAK,OACLmC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRrB,MAAOT,EAAKP,KACZsC,SAAUzB,EACViB,UAAWC,IAAOQ,iBAItB,wBAAOT,UAAWC,IAAOC,MAAzB,mBAEE,uBACEC,YAAY,oBACZC,KAAK,MACLlC,KAAK,SACLmC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRrB,MAAOT,EAAKH,OACZkC,SAAUzB,EACViB,UAAWC,IAAOQ,iBAItB,wBAAQL,KAAK,SAAb,6B,iBExCSM,EA7BK,WAClB,IAAMC,EAAmB/B,YAAYb,GAC/Bc,EAAWC,cAEX8B,EAAmB,SAAC5B,GACxB,IAAMa,EAAKb,EAAEC,OAAOY,GACpBhB,EDuC2B,SAACgB,GAAD,8CAAQ,WAAOhB,GAAP,SAAAY,EAAA,6DACrCZ,EAASlC,KAD4B,kBAG7B+C,IAAMmB,OAAN,uEAC4DhB,EAD5D,UAH6B,OAOnChB,EAASjC,EAAqBiD,IAPK,gDASnChB,EAAShC,EAAmB,KAAMkD,UATC,yDAAR,sDCvClBe,CAAuBjB,KAGlC,OACE,oBAAIG,UAAWe,IAAMpC,YAArB,SACGgC,EAAiBK,KAAI,SAAC/C,GAAD,OACpB,qBAAqB+B,UAAWe,IAAME,YAAtC,UACE,oBAAGjB,UAAWe,IAAMG,YAApB,UACGjD,EAAQC,KADX,KACmBD,EAAQK,UAE3B,wBAAQ8B,KAAK,SAASP,GAAI5B,EAAQ4B,GAAIsB,QAASP,EAA/C,sBAJO3C,EAAQ4B,U,iBCgBVuB,EA5BA,WACb,IAAMtD,EAASc,YAAYf,GACrBgB,EAAWC,cAOjB,OACE,wBAAOkB,UAAWe,IAAMM,YAAxB,iCAEE,uBACEjB,KAAK,OACLlC,KAAK,SACLgB,MAAOpB,EACP0C,SAZmB,SAACxB,GACxB,IAAME,EAAQF,EAAEC,OAAOC,MACvBL,EAASpC,EAAcyC,KAWnBc,UAAWe,IAAMO,kB,iBCiBVC,EA7BH,WACV,IAAM7D,EAASkB,YAAYnB,GACrBD,EAAQoB,YAAYvB,GACpBwB,EAAWC,cAWjB,OATA0C,qBAAU,WACR3C,EHawB,uCAAM,WAAOA,GAAP,iBAAAY,EAAA,6DAChCZ,EAAS/B,KADuB,kBAGP4C,IAAM+B,IAAN,qEAHO,QAGxB7B,EAHwB,QAOjBE,OACLvC,EAAWmE,OAAOC,KAAK/B,EAASE,MAAMkB,KAAI,SAACY,GAAD,oBAC9C/B,GAAI+B,GACDhC,EAASE,KAAK8B,OAEnB/C,EAAS9B,EAAmBQ,KAZA,gDAe9BsB,EAAS7B,EAAiB,KAAM+C,UAfF,yDAAN,yDGZvB,CAAClB,IAQF,mCACE,sBAAKmB,UAAWC,IAAO4B,IAAvB,UACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACCnE,GAAU,4CACVF,GAAS,6BAAKA,IACf,cAAC,EAAD,U,eCfFsE,EAAeC,YAAc,IAAD,mBAE/B7E,GAAoB,SAACI,EAAD,OAAU0E,EAAV,EAAUA,QAAV,4BAA4B1E,GAA5B,CAAmC0E,OAFxB,cAI/BjF,GAAqB,SAACkF,EAAD,YAAMD,WAJI,cAK/BpF,GAAuB,SAACU,EAAD,OAAU0E,EAAV,EAAUA,QAAV,OACtB1E,EAAMQ,QAAO,SAACG,GAAD,OAAaA,EAAQ4B,KAAOmC,QANX,IAS5BE,EAAgBH,YAAc,GAAD,eAChCtF,GAAgB,SAACwF,EAAD,YAAMD,YAGnBG,GAAgBJ,aAAc,GAAD,mBAEhCjF,GAAqB,kBAAM,KAFK,cAGhCG,GAAoB,kBAAM,KAHM,cAIhCN,GAAuB,kBAAM,KAJG,cAMhCI,GAAqB,kBAAM,KANK,cAOhCG,GAAoB,kBAAM,KAPM,cAQhCN,GAAuB,kBAAM,KARG,cAUhCI,GAAmB,kBAAM,KAVO,cAWhCG,GAAkB,kBAAM,KAXQ,cAYhCN,GAAqB,kBAAM,KAZK,IAe7BuF,GAAeL,YAAc,IAAD,mBAE/B3E,GAAa,iBAAM,MAFY,cAG/BJ,GAAmB,SAACiF,EAAGI,GAAJ,OAAeA,EAAOL,WAHV,cAI/B7E,GAAkB,SAAC8E,EAAGI,GAAJ,OAAeA,EAAOL,WAJT,cAK/BnF,GAAqB,SAACoF,EAAGI,GAAJ,OAAeA,EAAOL,WALZ,IAQrBM,GAAkBC,YAAgB,CAC7C3E,MAAOkE,EACPhE,OAAQoE,EACRxE,OAAQyE,GACR3E,MAAO4E,KCzCMI,GANDC,YAAe,CAC3BC,QAAS,CACPnF,SAAU+E,M,MCRdK,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.1b36cc9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3O0z4\",\"contactName\":\"ContactForm_contactName__2Cl6V\",\"label\":\"ContactForm_label__137Vb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__13H6R\",\"contactItem\":\"ContactList_contactItem__FQwdK\",\"contactText\":\"ContactList_contactText__3tbqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__Ltx_h\",\"filterLabel\":\"Filter_filterLabel__3XnbD\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterContact = createAction(\"contactsActions/filterContact\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contactsActions/deleteContactRequest\"\r\n);\r\n\r\nexport const deleteContactSuccess = createAction(\r\n  \"contactsActions/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\r\n  \"contactsActions/deleteContactError\"\r\n);\r\n\r\n// export const deleteContact = createAction(\"contactsActions/deleteContact\");\r\n\r\nexport const getContactsRequest = createAction(\r\n  \"contactsActions/getContactsRequest\"\r\n);\r\nexport const getContactsSuccess = createAction(\r\n  \"contactsActions/getContactsSuccess\"\r\n);\r\nexport const getContactsError = createAction(\r\n  \"contactsActions/getContactsError\"\r\n);\r\n\r\n// export const getContacts = createAction(\"contactsActions/getContacts\");\r\n\r\nexport const addContactRequest = createAction(\r\n  \"contactsActions/addContactRequest\"\r\n);\r\nexport const addContactSuccess = createAction(\r\n  \"contactsActions/addContactSuccess\"\r\n);\r\nexport const addContactError = createAction(\"contactsActions/addContactError\");\r\n\r\n// export const addContact = createAction(\r\n//   \"contactsActions/addContact\",\r\n//   (contact) => ({\r\n//     payload: { contact },\r\n//   })\r\n// );\r\n\r\n// export const setLoader = createAction(\"contactsActions/setLoader\");\r\nexport const resetError = createAction(\"contactsActions/resetError\");\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const errorSelector = (state) => state.contacts.error;\r\nexport const loaderSelector = (state) => state.contacts.loader;\r\nexport const contactListSelector = (state) => state.contacts.items;\r\nexport const contactFilterSelector = (state) => state.contacts.filter;\r\n\r\nexport const filteredContactsSelector = createSelector(\r\n  [contactListSelector, contactFilterSelector],\r\n  (contacts, filter) =>\r\n    contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetError } from \"../../redux/contacts/contactsActions\";\n// import { addContact } from \"../../redux/contacts/contactsActions\";\nimport { addContactOperation } from \"../../redux/contacts/contactsOperation\";\nimport { contactListSelector } from \"../../redux/contacts/contactsSelectors\";\nimport styles from \"./ContactForm.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = () => {\n  const [form, setForm] = useState(initialState);\n  const contactList = useSelector(contactListSelector);\n  const error = useSelector((state) => state.contacts.error);\n  const dispatch = useDispatch();\n\n  const onHandleChange = (e) => {\n    const { name, value } = e.target;\n    error && dispatch(resetError());\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const isThereThisContact = (name) =>\n    contactList.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    if (isThereThisContact(form.name)) {\n      alert(`${form.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContactOperation(form));\n\n    reset();\n  };\n\n  const reset = () => setForm({ name: \"\", number: \"\" });\n\n  return (\n    <form onSubmit={onHandleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          placeholder=\"Jacob Mercer\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={form.name}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          placeholder=\"+38(093)223-77-88\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={form.number}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import axios from \"axios\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  getContactsError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  setEr,\r\n} from \"./contactsActions\";\r\n\r\n// ===========addContactOperation===============\r\n\r\nconst addContactOperation = (contacts) => async (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const response = await axios.post(\r\n      `https://phonebook-de2b8-default-rtdb.firebaseio.com/contacts.json`,\r\n      contacts\r\n    );\r\n    dispatch(addContactSuccess({ ...contacts, id: response.data.name }));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\n// ===========getContactOperation===============\r\n\r\nconst getContactOperation = () => async (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    const response = await axios.get(\r\n      `https://phonebook-de2b8-default-rtdb.firebaseio.com/contacts.json`\r\n    );\r\n\r\n    if (response.data) {\r\n      const contacts = Object.keys(response.data).map((key) => ({\r\n        id: key,\r\n        ...response.data[key],\r\n      }));\r\n      dispatch(getContactsSuccess(contacts));\r\n    }\r\n  } catch (error) {\r\n    dispatch(getContactsError(error.message));\r\n  }\r\n};\r\n\r\n// ===========deleteContactOperation===============\r\n\r\nconst deleteContactOperation = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(\r\n      `https://phonebook-de2b8-default-rtdb.firebaseio.com/contacts/${id}.json`\r\n    );\r\n\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error.message));\r\n  }\r\n};\r\n\r\nexport { addContactOperation, getContactOperation, deleteContactOperation };\r\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ContactList.module.css\";\nimport { deleteContactOperation } from \"../../redux/contacts/contactsOperation\";\nimport { filteredContactsSelector } from \"../../redux/contacts/contactsSelectors\";\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(filteredContactsSelector);\n  const dispatch = useDispatch();\n\n  const onDeleteBtnClick = (e) => {\n    const id = e.target.id;\n    dispatch(deleteContactOperation(id));\n  };\n\n  return (\n    <ul className={style.contactList}>\n      {filteredContacts.map((contact) => (\n        <li key={contact.id} className={style.contactItem}>\n          <p className={style.contactText}>\n            {contact.name}: {contact.number}\n          </p>\n          <button type=\"button\" id={contact.id} onClick={onDeleteBtnClick}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterContact } from \"../../redux/contacts/contactsActions\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Filter.module.css\";\nimport { contactFilterSelector } from \"../../redux/contacts/contactsSelectors\";\n\nconst Filter = () => {\n  const filter = useSelector(contactFilterSelector);\n  const dispatch = useDispatch();\n\n  const addToFilterState = (e) => {\n    const value = e.target.value;\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <label className={style.filterLabel}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={addToFilterState}\n        className={style.filterInput}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  filterContact: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContactOperation } from \"../../redux/contacts/contactsOperation\";\nimport {\n  errorSelector,\n  loaderSelector,\n} from \"../../redux/contacts/contactsSelectors\";\nimport ContactForm from \"../contactForm/ContactForm \";\nimport ContactList from \"../contactList/ContactList\";\nimport Filter from \"../filter/Filter\";\nimport styles from \"./App.module.css\";\n\nconst App = () => {\n  const loader = useSelector(loaderSelector);\n  const error = useSelector(errorSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactOperation());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   contactList &&\n  //     localStorage.setItem(\"contacts\", JSON.stringify(contactList));\n  // }, [contactList]);\n\n  return (\n    <>\n      <div className={styles.box}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {loader && <h2>...loading</h2>}\n        {error && <h2>{error}</h2>}\n        <ContactList />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  filterContact,\r\n  deleteContact,\r\n  getContacts,\r\n  addContact,\r\n  setLoader,\r\n  setError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  resetError,\r\n} from \"./contactsActions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  // [addContact]: (state, { payload }) => [...state, payload],\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  // [getContacts]: (_, { payload }) => payload,\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loaderReducer = createReducer(false, {\r\n  // [setLoader]: (state) => !state,\r\n  [getContactsRequest]: () => true,\r\n  [addContactRequest]: () => true,\r\n  [deleteContactRequest]: () => true,\r\n\r\n  [getContactsSuccess]: () => false,\r\n  [addContactSuccess]: () => false,\r\n  [deleteContactSuccess]: () => false,\r\n\r\n  [getContactsError]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(\"\", {\r\n  // [setError]: (_, action) => action.payload,\r\n  [resetError]: () => \"\",\r\n  [getContactsError]: (_, action) => action.payload,\r\n  [addContactError]: (_, action) => action.payload,\r\n  [deleteContactError]: (_, action) => action.payload,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loader: loaderReducer,\r\n  error: errorReducer,\r\n});\r\n","// import { combineReducers, createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { contactsReducer } from \"./contacts/contactsReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// export const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//! Toolkit\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
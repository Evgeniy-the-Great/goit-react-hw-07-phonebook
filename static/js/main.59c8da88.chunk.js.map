{"version":3,"sources":["Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsSelectors.js","Components/contactForm/ContactForm .js","redux/contacts/contactsOperation.js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","Components/contactForm/ContactForm.module.css"],"names":["module","exports","filterContact","createAction","deleteContact","getContacts","addContact","contact","payload","setLoader","setError","errorSelector","state","contacts","error","loaderSelector","loader","contactListSelector","items","contactFilterSelector","filter","initialState","name","number","ContactForm","useState","form","setForm","contactList","useSelector","dispatch","useDispatch","onHandleChange","e","target","value","prev","reset","onSubmit","preventDefault","some","toLowerCase","alert","a","axios","post","response","id","data","message","className","styles","label","placeholder","type","pattern","title","required","onChange","contactName","ContactList","contactFilter","onDeleteBtnClick","delete","deleteContactOperation","style","console","log","includes","map","contactItem","contactText","onClick","Filter","filterLabel","filterInput","App","useEffect","get","Object","keys","key","box","itemsReducer","createReducer","_","filterReducer","loaderReducer","errorReducer","action","contactsReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59c8da88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__13H6R\",\"contactItem\":\"ContactList_contactItem__FQwdK\",\"contactText\":\"ContactList_contactText__3tbqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__Ltx_h\",\"filterLabel\":\"Filter_filterLabel__3XnbD\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterContact = createAction(\"contactsActions/filterContact\");\r\nexport const deleteContact = createAction(\"contactsActions/deleteContact\");\r\nexport const getContacts = createAction(\"contactsActions/getContacts\");\r\nexport const addContact = createAction(\r\n  \"contactsActions/addContact\",\r\n  (contact) => ({\r\n    payload: contact,\r\n  })\r\n);\r\n\r\nexport const setLoader = createAction(\"contactsActions/setLoader\");\r\nexport const setError = createAction(\"contactsActions/setError\");\r\n","export const errorSelector = (state) => state.contacts.error;\r\nexport const loaderSelector = (state) => state.contacts.loader;\r\nexport const contactListSelector = (state) => state.contacts.items;\r\nexport const contactFilterSelector = (state) => state.contacts.filter;\r\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { addContact } from \"../../redux/contacts/contactsActions\";\nimport { addContactOperation } from \"../../redux/contacts/contactsOperation\";\nimport { contactListSelector } from \"../../redux/contacts/contactsSelectors\";\nimport styles from \"./ContactForm.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = () => {\n  const [form, setForm] = useState(initialState);\n  const contactList = useSelector(contactListSelector);\n  const dispatch = useDispatch();\n\n  const onHandleChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const isThereThisContact = (name) =>\n    contactList.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    if (isThereThisContact(form.name)) {\n      alert(`${form.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContactOperation(form));\n\n    reset();\n  };\n\n  const reset = () => setForm({ name: \"\", number: \"\" });\n\n  return (\n    <form onSubmit={onHandleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          placeholder=\"Jacob Mercer\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={form.name}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          placeholder=\"+38(093)223-77-88\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={form.number}\n          onChange={onHandleChange}\n          className={styles.contactName}\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import axios from \"axios\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getContacts,\r\n  setError,\r\n  setLoader,\r\n} from \"./contactsActions\";\r\n\r\nconst addContactOperation = (contacts) => async (dispatch) => {\r\n  dispatch(setLoader());\r\n  try {\r\n    const response = await axios.post(\r\n      `https://phonebook-de2b8-default-rtdb.firebaseio.com/contacts.json`,\r\n      contacts\r\n    );\r\n    dispatch(addContact({ ...contacts, id: response.data.name }));\r\n  } catch (error) {\r\n    dispatch(setError(error.message));\r\n  } finally {\r\n    dispatch(setLoader());\r\n  }\r\n};\r\n\r\nconst getContactOperation = () => async (dispatch) => {\r\n  dispatch(setLoader());\r\n  try {\r\n    const response = await axios.get(\r\n      `https://phonebook-de2b8-default-rtdb.firebaseio.com/contacts.json`\r\n    );\r\n\r\n    if (response.data) {\r\n      const contacts = Object.keys(response.data).map((key) => ({\r\n        id: key,\r\n        ...response.data[key],\r\n      }));\r\n      dispatch(getContacts(contacts));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setError(error.message));\r\n  } finally {\r\n    dispatch(setLoader());\r\n  }\r\n};\r\n\r\nconst deleteContactOperation = (id) => async (dispatch) => {\r\n  dispatch(setLoader());\r\n  try {\r\n    await axios.delete(\r\n      `https://phonebook-de2b8-default-rtdb.firebaseio.com/contacts/${id}.json`\r\n    );\r\n\r\n    dispatch(deleteContact(id));\r\n  } catch (error) {\r\n    dispatch(setError(error.message));\r\n  } finally {\r\n    dispatch(setLoader());\r\n  }\r\n};\r\n\r\nexport { addContactOperation, getContactOperation, deleteContactOperation };\r\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ContactList.module.css\";\nimport { deleteContactOperation } from \"../../redux/contacts/contactsOperation\";\nimport {\n  contactFilterSelector,\n  contactListSelector,\n} from \"../../redux/contacts/contactsSelectors\";\n\nconst ContactList = () => {\n  const contactList = useSelector(contactListSelector);\n  const contactFilter = useSelector(contactFilterSelector);\n  const dispatch = useDispatch();\n\n  const onDeleteBtnClick = (e) => {\n    const id = e.target.id;\n    dispatch(deleteContactOperation(id));\n  };\n\n  const findContact = () =>\n    contactList.filter((contact) => {\n      // console.log(contact);\n      console.log(contactFilter);\n      return contact.name.toLowerCase().includes(contactFilter.toLowerCase());\n    });\n\n  return (\n    <ul className={style.contactList}>\n      {findContact().map((contact) => (\n        <li key={contact.id} className={style.contactItem}>\n          <p className={style.contactText}>\n            {contact.name}: {contact.number}\n          </p>\n          <button type=\"button\" id={contact.id} onClick={onDeleteBtnClick}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterContact } from \"../../redux/contacts/contactsActions\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Filter.module.css\";\nimport { contactFilterSelector } from \"../../redux/contacts/contactsSelectors\";\n\nconst Filter = () => {\n  const filter = useSelector(contactFilterSelector);\n  const dispatch = useDispatch();\n\n  const addToFilterState = (e) => {\n    const value = e.target.value;\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <label className={style.filterLabel}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={addToFilterState}\n        className={style.filterInput}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  filterContact: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContactOperation } from \"../../redux/contacts/contactsOperation\";\nimport {\n  errorSelector,\n  loaderSelector,\n} from \"../../redux/contacts/contactsSelectors\";\nimport ContactForm from \"../contactForm/ContactForm \";\nimport ContactList from \"../contactList/ContactList\";\nimport Filter from \"../filter/Filter\";\nimport styles from \"./App.module.css\";\n\nconst App = () => {\n  const loader = useSelector(loaderSelector);\n  const error = useSelector(errorSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactOperation());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   contactList &&\n  //     localStorage.setItem(\"contacts\", JSON.stringify(contactList));\n  // }, [contactList]);\n\n  return (\n    <>\n      <div className={styles.box}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {loader && <h2>...loading</h2>}\n        {error && <h2>{error}</h2>}\n        <ContactList />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  filterContact,\r\n  deleteContact,\r\n  getContacts,\r\n  addContact,\r\n  setLoader,\r\n  setError,\r\n} from \"./contactsActions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [getContacts]: (_, { payload }) => payload,\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loaderReducer = createReducer(false, {\r\n  [setLoader]: (state) => !state,\r\n});\r\n\r\nconst errorReducer = createReducer(\"\", {\r\n  [setError]: (_, action) => action.payload,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loader: loaderReducer,\r\n  error: errorReducer,\r\n});\r\n","// import { combineReducers, createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { contactsReducer } from \"./contacts/contactsReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// export const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n//! Toolkit\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3O0z4\",\"contactName\":\"ContactForm_contactName__2Cl6V\",\"label\":\"ContactForm_label__137Vb\"};"],"sourceRoot":""}